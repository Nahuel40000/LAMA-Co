[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nAutoForm = Package['aldeed:autoform'].AutoForm;\nBert = Package['themeteorchef:bert'].Bert;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nAccounts = Package['accounts-base'].Accounts;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nSimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nMongoObject = Package['aldeed:simple-schema'].MongoObject;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"main.html\":[\"./template.main.js\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/main.html                                                                                                 //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nmodule.exports = require(\"./template.main.js\");                                                                     // 1\n                                                                                                                    // 2\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"template.main.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/template.main.js                                                                                          //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n                                                                                                                    // 1\nTemplate.body.addContent((function() {                                                                              // 2\n  var view = this;                                                                                                  // 3\n  return [ Spacebars.include(view.lookupTemplate(\"accueil\")), \"\\n\\n  \", Spacebars.include(view.lookupTemplate(\"loginButtons\")), \"\\n  \\n  \", Blaze.Unless(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"currentUser\"), \"emails\", \"0\", \"verified\"));                    // 5\n  }, function() {                                                                                                   // 6\n    return \"\\n  \";                                                                                                  // 7\n  }), \" \\n\\n\\n  \", Blaze.Unless(function() {                                                                        // 8\n    return Spacebars.call(Spacebars.dot(view.lookup(\"currentUser\"), \"emails\", \"0\", \"verified\"));                    // 9\n  }, function() {                                                                                                   // 10\n    return [ \"\\n  \", Spacebars.include(view.lookupTemplate(\"index\")), \"\\n  \" ];                                     // 11\n  }, function() {                                                                                                   // 12\n    return [ \" \\n\", HTML.P(\"----------------------------------\"), \"\\n  \", Spacebars.include(view.lookupTemplate(\"recherche\")), \"\\n\", HTML.P(\"----------------------------------\"), \"\\n  \", HTML.H2(\"Insert:\"), \"\\n  \", HTML.Comment(\"{{> creer_annonce}}\"), \"\\n  \", Spacebars.include(view.lookupTemplate(\"insertAnnonceForm\")), \"\\n\", HTML.P(\"----------------------------------\"), \"\\n\", HTML.Comment(\"  <h2>Update:</h2>\\n  {{> updateAnnonceForm}}\\n\"), \"\\n\", HTML.P(\"**********************************\"), \"\\n  \", Spacebars.include(view.lookupTemplate(\"ajout\")), \"\\n  \", HTML.BR(), HTML.BR(), HTML.BR(), \"\\n  \", HTML.UL(\"\\n    \", HTML.FORM({\n      name: \"ad\"                                                                                                    // 14\n    }, \"\\n      \", HTML.INPUT({                                                                                     // 15\n      type: \"number\",                                                                                               // 16\n      name: \"price\",                                                                                                // 17\n      placeholder: \"Prix\"                                                                                           // 18\n    }), \"\\n      \", HTML.INPUT({                                                                                    // 19\n      type: \"text\",                                                                                                 // 20\n      name: \"com\",                                                                                                  // 21\n      placeholder: \"Remarque\"                                                                                       // 22\n    }), \"\\n      \", HTML.INPUT({                                                                                    // 23\n      type: \"text\",                                                                                                 // 24\n      name: \"cont\",                                                                                                 // 25\n      placeholder: \"Adresse de contact\"                                                                             // 26\n    }), \"\\n      \", HTML.INPUT({                                                                                    // 27\n      type: \"button\",                                                                                               // 28\n      \"class\": \"AddAnnonce\",                                                                                        // 29\n      value: \"Ajouter l'annonce\"                                                                                    // 30\n    }), \"\\n      \\n  \"), \"\\n    \", Blaze.Each(function() {                                                          // 31\n      return Spacebars.call(view.lookup(\"result\"));                                                                 // 32\n    }, function() {                                                                                                 // 33\n      return [ \"\\n      \", Spacebars.include(view.lookupTemplate(\"resultat\")), \"\\n    \" ];                          // 34\n    }), \"\\n  \"), \"\\n\", HTML.P(\"**********************************\"), \"\\n  \" ];                                      // 35\n  }) ];                                                                                                             // 36\n}));                                                                                                                // 37\nMeteor.startup(Template.body.renderToDocument);                                                                     // 38\n                                                                                                                    // 39\nTemplate.__checkName(\"accueil\");                                                                                    // 40\nTemplate[\"accueil\"] = new Template(\"Template.accueil\", (function() {                                                // 41\n  var view = this;                                                                                                  // 42\n  return HTML.Raw(\"<h1>Bienvenue sur l'app LAMA</h1>\");                                                             // 43\n}));                                                                                                                // 44\n                                                                                                                    // 45\nTemplate.__checkName(\"signup\");                                                                                     // 46\nTemplate[\"signup\"] = new Template(\"Template.signup\", (function() {                                                  // 47\n  var view = this;                                                                                                  // 48\n  return HTML.Raw('<div class=\"row\">\\n    <div class=\"col-xs-12 col-sm-6 col-md-4\">\\n      <h4 class=\"page-header\">Création de compte</h4>\\n      <form id=\"signup\" class=\"signup\">\\n        <div class=\"form-group\">\\n          <label for=\"emailAddress\">Email Address</label>\\n          <input type=\"email\" name=\"emailAddress\" class=\"form-control\" placeholder=\"Email Address\">\\n        </div>\\n        <div class=\"form-group\">\\n          <label for=\"password\">Password</label>\\n          <input type=\"password\" name=\"password\" class=\"form-control\" placeholder=\"Password\">\\n        </div>\\n        <div class=\"form-group\">\\n          <input type=\"submit\" class=\"btn btn-success\" value=\"Créer le compte\">\\n        </div>\\n      </form>\\n    </div>\\n  </div>');\n}));                                                                                                                // 50\n                                                                                                                    // 51\nTemplate.__checkName(\"index\");                                                                                      // 52\nTemplate[\"index\"] = new Template(\"Template.index\", (function() {                                                    // 53\n  var view = this;                                                                                                  // 54\n  return HTML.Raw('<p class=\"alert alert-warning\">Vous devez procéder à la vérification de compte via le lien envoyé automatiquement à l\\'adresse email que vous avez spécifiée avant de pouvoir utiliser Unibooks. <a href=\"#\" class=\"resend-verification-link\">Renvoyer le lien de vérification</a>.</p>');\n}));                                                                                                                // 56\n                                                                                                                    // 57\nTemplate.__checkName(\"recherche\");                                                                                  // 58\nTemplate[\"recherche\"] = new Template(\"Template.recherche\", (function() {                                            // 59\n  var view = this;                                                                                                  // 60\n  return HTML.Raw('<p>Rechercher un livre:</p>\\n  <form>\\n    Entrer l\\'ISBN, le titre du livre ou l\\'auteur: <input type=\"text\">\\n    <input type=\"button\" value=\"Rechercher\">\\n  </form>');\n}));                                                                                                                // 62\n                                                                                                                    // 63\nTemplate.__checkName(\"ajout\");                                                                                      // 64\nTemplate[\"ajout\"] = new Template(\"Template.ajout\", (function() {                                                    // 65\n  var view = this;                                                                                                  // 66\n  return HTML.Raw('<p>Rechercher un livre:</p>\\n  <form name=\"searchitem\">\\n    Entrer l\\'ISBN, le titre du livre ou l\\'auteur: <input type=\"text\" name=\"champinfo\">\\n    <input type=\"button\" class=\"SearchIPA\" name=\"infolivre\" value=\"Search in Google IPA\">\\n  </form>');\n}));                                                                                                                // 68\n                                                                                                                    // 69\nTemplate.__checkName(\"resultat\");                                                                                   // 70\nTemplate[\"resultat\"] = new Template(\"Template.resultat\", (function() {                                              // 71\n  var view = this;                                                                                                  // 72\n  return HTML.LI({                                                                                                  // 73\n    id: \"koala\",                                                                                                    // 74\n    \"class\": function() {                                                                                           // 75\n      return [ \"book \", Spacebars.mustache(view.lookup(\"selectedClass\")) ];                                         // 76\n    }                                                                                                               // 77\n  }, Blaze.View(\"lookup:volumeInfo.title\", function() {                                                             // 78\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"volumeInfo\"), \"title\"));                                   // 79\n  }), HTML.Raw(\"<br>\"), Blaze.View(\"lookup:volumeInfo.authors\", function() {                                        // 80\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"volumeInfo\"), \"authors\"));                                 // 81\n  }), HTML.Raw(\"<br>\"), HTML.IMG({                                                                                  // 82\n    src: function() {                                                                                               // 83\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"volumeInfo\"), \"imageLinks\", \"thumbnail\"));               // 84\n    },                                                                                                              // 85\n    alt: \"Image non disponible\"                                                                                     // 86\n  }), \"\\n    \");                                                                                                    // 87\n}));                                                                                                                // 88\n                                                                                                                    // 89\nTemplate.__checkName(\"insertAnnonceForm\");                                                                          // 90\nTemplate[\"insertAnnonceForm\"] = new Template(\"Template.insertAnnonceForm\", (function() {                            // 91\n  var view = this;                                                                                                  // 92\n  return Blaze._TemplateWith(function() {                                                                           // 93\n    return {                                                                                                        // 94\n      collection: Spacebars.call(\"AnnonceList\"),                                                                    // 95\n      id: Spacebars.call(\"insertAnnonceForm\"),                                                                      // 96\n      type: Spacebars.call(\"insert\")                                                                                // 97\n    };                                                                                                              // 98\n  }, function() {                                                                                                   // 99\n    return Spacebars.include(view.lookupTemplate(\"quickForm\"));                                                     // 100\n  });                                                                                                               // 101\n}));                                                                                                                // 102\n                                                                                                                    // 103\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":[\"meteor/templating\",\"meteor/reactive-var\",\"meteor/mongo\",\"./main.html\",function(require){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/main.js                                                                                                   //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nvar _templating = require('meteor/templating');                                                                     // 1\n                                                                                                                    //\nvar _reactiveVar = require('meteor/reactive-var');                                                                  // 2\n                                                                                                                    //\nvar _mongo = require('meteor/mongo');                                                                               // 3\n                                                                                                                    //\nrequire('./main.html');                                                                                             // 4\n                                                                                                                    //\nAnnonceList = new _mongo.Mongo.Collection('annonce');                                                               // 6\n                                                                                                                    //\nAnnonceList.attachSchema(new SimpleSchema({                                                                         // 8\n  title: {                                                                                                          // 9\n    type: String,                                                                                                   // 10\n    label: \"Titre\"                                                                                                  // 11\n  },                                                                                                                //\n  author: {                                                                                                         // 13\n    type: String,                                                                                                   // 14\n    label: \"Auteur\"                                                                                                 // 15\n  },                                                                                                                //\n  isbn: {                                                                                                           // 17\n    type: String,                                                                                                   // 18\n    label: \"ISBN\",                                                                                                  // 19\n    max: 17,                                                                                                        // 20\n    min: 17,                                                                                                        // 21\n    optional: true                                                                                                  // 22\n  },                                                                                                                //\n  prix: {                                                                                                           // 24\n    type: Number,                                                                                                   // 25\n    label: \"Prix\"                                                                                                   // 26\n  },                                                                                                                //\n  contact: {                                                                                                        // 28\n    type: String,                                                                                                   // 29\n    label: \"L'adresse mail à laquelle vous voulez être contacté\"                                                    // 30\n  },                                                                                                                //\n  remarque: {                                                                                                       // 32\n    type: String,                                                                                                   // 33\n    label: \"Remarque\",                                                                                              // 34\n    optional: true,                                                                                                 // 35\n    max: 1000                                                                                                       // 36\n  }                                                                                                                 //\n}));                                                                                                                //\n                                                                                                                    //\n// Toute cette partie contient du code lié au LOGIN                                                                 //\n                                                                                                                    //\n_templating.Template.signup.events({                                                                                // 43\n  'submit form': function () {                                                                                      // 44\n    function submitForm(event, template) {                                                                          //\n      event.preventDefault(); // création d'un event lorsque l'utilisateur soumet sa demande de création de compte  // 45\n                                                                                                                    //\n      var user = {                                                                                                  // 44\n        email: template.find('[name=\"emailAddress\"]').value,                                                        // 48\n        password: template.find('[name=\"password\"]').value                                                          // 49\n      }; // récupération de l'email de l'utilisateur demandant la création de compte                                //\n                                                                                                                    //\n      Accounts.createUser(user, function (error) {                                                                  // 44\n        if (error) {                                                                                                // 53\n          Bert.alert(error.reason, 'danger');                                                                       // 54\n        } else {                                                                                                    //\n          Meteor.call('sendVerificationLink', function (error, response) {                                          // 56\n            if (error) {                                                                                            // 57\n              Bert.alert(error.reason, 'danger');                                                                   // 58\n            } else {                                                                                                //\n              Bert.alert('Bienvenue!', 'success');                                                                  // 60\n            }                                                                                                       //\n          });                                                                                                       //\n        }                                                                                                           //\n      });                                                                                                           //\n    }                                                                                                               //\n                                                                                                                    //\n    return submitForm;                                                                                              //\n  }()                                                                                                               //\n}); // Génère des alertes grâce à Bert en fonction des données entrées par l'utilisateur (mauvais mdp, email. etc.)\n                                                                                                                    //\n_templating.Template.index.events({                                                                                 // 70\n  'click .resend-verification-link': function () {                                                                  // 71\n    function clickResendVerificationLink(event, template) {                                                         //\n      Meteor.call('sendVerificationLink', function (error, response) {                                              // 72\n        if (error) {                                                                                                // 73\n          Bert.alert(error.reason, 'danger');                                                                       // 74\n        } else {                                                                                                    //\n          var email = Meteor.user().emails[0].address;                                                              // 76\n          Bert.alert('Vérification envoyée à ' + email + '!', 'success');                                           // 77\n        }                                                                                                           //\n      });                                                                                                           //\n    }                                                                                                               //\n                                                                                                                    //\n    return clickResendVerificationLink;                                                                             //\n  }()                                                                                                               //\n}); // lien pour renvoyé un mail de vérification au format alerte Bert                                              //\n                                                                                                                    //\nFlowRouter.route('/verify-email/:token', {                                                                          // 83\n  name: 'verify-email',                                                                                             // 84\n  action: function () {                                                                                             // 85\n    function action(params) {                                                                                       //\n      Accounts.verifyEmail(params.token, function (error) {                                                         // 86\n        if (error) {                                                                                                // 87\n          Bert.alert(error.reason, 'danger');                                                                       // 88\n        } else {                                                                                                    //\n          FlowRouter.go('/');                                                                                       // 90\n          Bert.alert('Vérification réussie! Merci et bonne visite!', 'success');                                    // 91\n        }                                                                                                           //\n      });                                                                                                           //\n    }                                                                                                               //\n                                                                                                                    //\n    return action;                                                                                                  //\n  }()                                                                                                               //\n}); // Création du routing de vérification grâce à Flowrouter.                                                      //\n                                                                                                                    //\n_templating.Template.register.events({                                                                              // 97\n  'submit #register-form': function () {                                                                            // 98\n    function submitRegisterForm(e, t) {                                                                             // 98\n      e.preventDefault();                                                                                           // 99\n      var email = t.find('#account-email').value,                                                                   // 100\n          password = t.find('#account-password').value;                                                             //\n                                                                                                                    //\n      // Trim and validate the input                                                                                //\n                                                                                                                    //\n      Accounts.onCreateUser({ email: email, password: password }, function (err) {                                  // 98\n        if (err) {                                                                                                  // 106\n          // Inform the user that account creation failed                                                           //\n        } else {                                                                                                    //\n            // Success. Account has been created and the user                                                       //\n            // has logged in successfully.                                                                          //\n            Accounts.sendVerificationEmail(this.userId, email);                                                     // 111\n          }                                                                                                         //\n      });                                                                                                           //\n                                                                                                                    //\n      return false;                                                                                                 // 115\n    }                                                                                                               //\n                                                                                                                    //\n    return submitRegisterForm;                                                                                      //\n  }() });                                                                                                           //\n// Fin de la partie LOGIN                                                                                           //\n                                                                                                                    //\n_templating.Template.rechercheAnnonce.events({                                                                      // 119\n  'submit.search': function () {                                                                                    // 120\n    function submitSearch(Author, Title) {                                                                          // 120\n      event.preventDefault();                                                                                       // 121\n      // rechercher une annonce par son titre ou son utilisateur                                                    //\n      var Author = $('[name=author]').val();                                                                        // 120\n      var Title = $('[name=title]').val();                                                                          // 124\n      console.log(AnnonceList.find({ $or: [{ \"author\": \"Author\" }, { \"title\": \"Title\" }] }).fetch());               // 125\n    }                                                                                                               //\n                                                                                                                    //\n    return submitSearch;                                                                                            //\n  }() });                                                                                                           //\n// Afficher annonces par utilisateur                                                                                //\nvar username = Meteor.userId();                                                                                     // 127\nconsole.log(AnnonceList.find(username));                                                                            // 128\n_templating.Template.body.helpers({                                                                                 // 129\n  AnnonceList: function (_AnnonceList) {                                                                            // 130\n    function AnnonceList() {                                                                                        //\n      return _AnnonceList.apply(this, arguments);                                                                   //\n    }                                                                                                               //\n                                                                                                                    //\n    AnnonceList.toString = function () {                                                                            //\n      return _AnnonceList.toString();                                                                               //\n    };                                                                                                              //\n                                                                                                                    //\n    return AnnonceList;                                                                                             //\n  }(function () {                                                                                                   //\n    return AnnonceList.find({});                                                                                    // 131\n  })                                                                                                                //\n});                                                                                                                 //\n                                                                                                                    //\n_templating.Template.body.helpers({                                                                                 // 135\n  // définit le contexte de résultats                                                                               //\n  'result': function () {                                                                                           // 137\n    function result() {                                                                                             // 137\n      var listRes = Session.get('selectedbook');                                                                    // 138\n      console.log(listRes);                                                                                         // 139\n      Session.set('listResult', listRes);                                                                           // 140\n      return listRes;                                                                                               // 141\n    }                                                                                                               //\n                                                                                                                    //\n    return result;                                                                                                  //\n  }()                                                                                                               //\n});                                                                                                                 //\n                                                                                                                    //\n_templating.Template.resultat.helpers({                                                                             // 145\n  'selectedClass': function () {                                                                                    // 146\n    function selectedClass() {                                                                                      // 146\n      var bookChoisi = this.id;                                                                                     // 147\n      var livreclicked = Session.get('livreclicked', bookChoisi);                                                   // 148\n      if (bookChoisi == livreclicked) {                                                                             // 149\n        return \"selected\";                                                                                          // 150\n      }                                                                                                             //\n    }                                                                                                               //\n                                                                                                                    //\n    return selectedClass;                                                                                           //\n  }()                                                                                                               //\n});                                                                                                                 //\n                                                                                                                    //\n_templating.Template.ajout.events({                                                                                 // 156\n  'click .SearchIPA': function () {                                                                                 // 157\n    function clickSearchIPA() {                                                                                     // 157\n      var infolivre = document.forms['searchitem'].champinfo.value;                                                 // 158\n      var stringsearch = \"https://www.googleapis.com/books/v1/volumes?q=search+\" + infolivre;                       // 159\n      alert(\"requête envoyée: \" + stringsearch);                                                                    // 160\n      var data;                                                                                                     // 161\n      $.get(stringsearch, function (data) {                                                                         // 162\n        alert(\"Données reçues: \" + data);                                                                           // 163\n        Session.set('selectedbook', data.items);                                                                    // 164\n      });                                                                                                           //\n    }                                                                                                               //\n                                                                                                                    //\n    return clickSearchIPA;                                                                                          //\n  }()                                                                                                               //\n});                                                                                                                 //\n                                                                                                                    //\n_templating.Template.resultat.events({                                                                              // 169\n  'click .book': function () {                                                                                      // 170\n    function clickBook() {                                                                                          // 170\n      var bookChoisi = this.id;                                                                                     // 171\n      console.log(bookChoisi);                                                                                      // 172\n      Session.set('livreclicked', bookChoisi);                                                                      // 173\n    }                                                                                                               //\n                                                                                                                    //\n    return clickBook;                                                                                               //\n  }()                                                                                                               //\n});                                                                                                                 //\n                                                                                                                    //\n_templating.Template.body.events({                                                                                  // 177\n  'click .AddAnnonce': function () {                                                                                // 178\n    function clickAddAnnonce() {                                                                                    // 178\n      var chain = $(\"#koala\").html();                                                                               // 179\n      console.log(chain);                                                                                           // 180\n      chain = chain.split(/<br>/);                                                                                  // 181\n      console.log(chain);                                                                                           // 182\n      var tit = chain[0];                                                                                           // 183\n      var aut = chain[1];                                                                                           // 184\n      var img = chain[2];                                                                                           // 185\n      var rem = document.forms['ad'].com.value;                                                                     // 186\n      var price = document.forms['ad'].price.value;                                                                 // 187\n      var cont = document.forms['ad'].cont.value;                                                                   // 188\n      AnnonceList.insert({                                                                                          // 189\n        title: chain[0],                                                                                            // 191\n        author: chain[1],                                                                                           // 192\n        prix: price,                                                                                                // 193\n        contact: cont,                                                                                              // 194\n        remarque: rem                                                                                               // 195\n                                                                                                                    //\n      });                                                                                                           //\n    }                                                                                                               //\n                                                                                                                    //\n    return clickAddAnnonce;                                                                                         //\n  }()                                                                                                               //\n                                                                                                                    //\n});                                                                                                                 //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./client/template.main.js\");\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["client/main.html","/client/template.main.js","/client/main.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["module.exports = require(\"./template.main.js\");\n","\nTemplate.body.addContent((function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"accueil\")), \"\\n\\n  \", Spacebars.include(view.lookupTemplate(\"loginButtons\")), \"\\n  \\n  \", Blaze.Unless(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"currentUser\"), \"emails\", \"0\", \"verified\"));\n  }, function() {\n    return \"\\n  \";\n  }), \" \\n\\n\\n  \", Blaze.Unless(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"currentUser\"), \"emails\", \"0\", \"verified\"));\n  }, function() {\n    return [ \"\\n  \", Spacebars.include(view.lookupTemplate(\"index\")), \"\\n  \" ];\n  }, function() {\n    return [ \" \\n\", HTML.P(\"----------------------------------\"), \"\\n  \", Spacebars.include(view.lookupTemplate(\"recherche\")), \"\\n\", HTML.P(\"----------------------------------\"), \"\\n  \", HTML.H2(\"Insert:\"), \"\\n  \", HTML.Comment(\"{{> creer_annonce}}\"), \"\\n  \", Spacebars.include(view.lookupTemplate(\"insertAnnonceForm\")), \"\\n\", HTML.P(\"----------------------------------\"), \"\\n\", HTML.Comment(\"  <h2>Update:</h2>\\n  {{> updateAnnonceForm}}\\n\"), \"\\n\", HTML.P(\"**********************************\"), \"\\n  \", Spacebars.include(view.lookupTemplate(\"ajout\")), \"\\n  \", HTML.BR(), HTML.BR(), HTML.BR(), \"\\n  \", HTML.UL(\"\\n    \", HTML.FORM({\n      name: \"ad\"\n    }, \"\\n      \", HTML.INPUT({\n      type: \"number\",\n      name: \"price\",\n      placeholder: \"Prix\"\n    }), \"\\n      \", HTML.INPUT({\n      type: \"text\",\n      name: \"com\",\n      placeholder: \"Remarque\"\n    }), \"\\n      \", HTML.INPUT({\n      type: \"text\",\n      name: \"cont\",\n      placeholder: \"Adresse de contact\"\n    }), \"\\n      \", HTML.INPUT({\n      type: \"button\",\n      \"class\": \"AddAnnonce\",\n      value: \"Ajouter l'annonce\"\n    }), \"\\n      \\n  \"), \"\\n    \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"result\"));\n    }, function() {\n      return [ \"\\n      \", Spacebars.include(view.lookupTemplate(\"resultat\")), \"\\n    \" ];\n    }), \"\\n  \"), \"\\n\", HTML.P(\"**********************************\"), \"\\n  \" ];\n  }) ];\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"accueil\");\nTemplate[\"accueil\"] = new Template(\"Template.accueil\", (function() {\n  var view = this;\n  return HTML.Raw(\"<h1>Bienvenue sur l'app LAMA</h1>\");\n}));\n\nTemplate.__checkName(\"signup\");\nTemplate[\"signup\"] = new Template(\"Template.signup\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"row\">\\n    <div class=\"col-xs-12 col-sm-6 col-md-4\">\\n      <h4 class=\"page-header\">Création de compte</h4>\\n      <form id=\"signup\" class=\"signup\">\\n        <div class=\"form-group\">\\n          <label for=\"emailAddress\">Email Address</label>\\n          <input type=\"email\" name=\"emailAddress\" class=\"form-control\" placeholder=\"Email Address\">\\n        </div>\\n        <div class=\"form-group\">\\n          <label for=\"password\">Password</label>\\n          <input type=\"password\" name=\"password\" class=\"form-control\" placeholder=\"Password\">\\n        </div>\\n        <div class=\"form-group\">\\n          <input type=\"submit\" class=\"btn btn-success\" value=\"Créer le compte\">\\n        </div>\\n      </form>\\n    </div>\\n  </div>');\n}));\n\nTemplate.__checkName(\"index\");\nTemplate[\"index\"] = new Template(\"Template.index\", (function() {\n  var view = this;\n  return HTML.Raw('<p class=\"alert alert-warning\">Vous devez procéder à la vérification de compte via le lien envoyé automatiquement à l\\'adresse email que vous avez spécifiée avant de pouvoir utiliser Unibooks. <a href=\"#\" class=\"resend-verification-link\">Renvoyer le lien de vérification</a>.</p>');\n}));\n\nTemplate.__checkName(\"recherche\");\nTemplate[\"recherche\"] = new Template(\"Template.recherche\", (function() {\n  var view = this;\n  return HTML.Raw('<p>Rechercher un livre:</p>\\n  <form>\\n    Entrer l\\'ISBN, le titre du livre ou l\\'auteur: <input type=\"text\">\\n    <input type=\"button\" value=\"Rechercher\">\\n  </form>');\n}));\n\nTemplate.__checkName(\"ajout\");\nTemplate[\"ajout\"] = new Template(\"Template.ajout\", (function() {\n  var view = this;\n  return HTML.Raw('<p>Rechercher un livre:</p>\\n  <form name=\"searchitem\">\\n    Entrer l\\'ISBN, le titre du livre ou l\\'auteur: <input type=\"text\" name=\"champinfo\">\\n    <input type=\"button\" class=\"SearchIPA\" name=\"infolivre\" value=\"Search in Google IPA\">\\n  </form>');\n}));\n\nTemplate.__checkName(\"resultat\");\nTemplate[\"resultat\"] = new Template(\"Template.resultat\", (function() {\n  var view = this;\n  return HTML.LI({\n    id: \"koala\",\n    \"class\": function() {\n      return [ \"book \", Spacebars.mustache(view.lookup(\"selectedClass\")) ];\n    }\n  }, Blaze.View(\"lookup:volumeInfo.title\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"volumeInfo\"), \"title\"));\n  }), HTML.Raw(\"<br>\"), Blaze.View(\"lookup:volumeInfo.authors\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"volumeInfo\"), \"authors\"));\n  }), HTML.Raw(\"<br>\"), HTML.IMG({\n    src: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"volumeInfo\"), \"imageLinks\", \"thumbnail\"));\n    },\n    alt: \"Image non disponible\"\n  }), \"\\n    \");\n}));\n\nTemplate.__checkName(\"insertAnnonceForm\");\nTemplate[\"insertAnnonceForm\"] = new Template(\"Template.insertAnnonceForm\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      collection: Spacebars.call(\"AnnonceList\"),\n      id: Spacebars.call(\"insertAnnonceForm\"),\n      type: Spacebars.call(\"insert\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"quickForm\"));\n  });\n}));\n","import { Template } from 'meteor/templating';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Mongo } from 'meteor/mongo';\nimport './main.html';\n\nAnnonceList = new Mongo.Collection('annonce');\n\nAnnonceList.attachSchema(new SimpleSchema({\n  title: {\n    type: String,\n    label: \"Titre\",\n  },\n  author: {\n    type: String,\n    label: \"Auteur\",\n  },\n  isbn: {\n    type: String,\n    label: \"ISBN\",\n    max: 17,\n    min: 17,\n    optional: true\n  },\n  prix: {\n    type: Number,\n    label: \"Prix\",\n  },\n  contact: {\n    type: String,\n    label: \"L'adresse mail à laquelle vous voulez être contacté\"\n  },\n  remarque: {\n    type: String,\n    label: \"Remarque\",\n    optional: true,\n    max: 1000\n  }\n}));\n\t\n\n// Toute cette partie contient du code lié au LOGIN \n  \nTemplate.signup.events({\n  'submit form' ( event, template ) {\n    event.preventDefault(); // création d'un event lorsque l'utilisateur soumet sa demande de création de compte\n    \n    let user = {\n      email: template.find( '[name=\"emailAddress\"]' ).value,\n      password: template.find( '[name=\"password\"]' ).value\n    }; // récupération de l'email de l'utilisateur demandant la création de compte\n\n    Accounts.createUser( user, ( error ) => {\n      if ( error ) {\n        Bert.alert( error.reason, 'danger' );\n      } else {\n        Meteor.call( 'sendVerificationLink', ( error, response ) => {\n          if ( error ) {\n            Bert.alert( error.reason, 'danger' );\n          } else {\n            Bert.alert( 'Bienvenue!', 'success' );\n          }\n        });\n      }\n    });\n  }\n}); // Génère des alertes grâce à Bert en fonction des données entrées par l'utilisateur (mauvais mdp, email. etc.)\n\n\n\nTemplate.index.events({\n  'click .resend-verification-link' ( event, template ) {\n    Meteor.call( 'sendVerificationLink', ( error, response ) => {\n      if ( error ) {\n        Bert.alert( error.reason, 'danger' );\n      } else {\n        let email = Meteor.user().emails[ 0 ].address;\n        Bert.alert( `Vérification envoyée à ${ email }!`, 'success' );\n      }\n    });\n  }\n}); // lien pour renvoyé un mail de vérification au format alerte Bert\n\nFlowRouter.route( '/verify-email/:token', {\n  name: 'verify-email',\n  action( params ) {\n    Accounts.verifyEmail( params.token, ( error ) =>{\n      if ( error ) {\n        Bert.alert( error.reason, 'danger' );\n      } else {\n        FlowRouter.go( '/' );\n        Bert.alert( 'Vérification réussie! Merci et bonne visite!', 'success' );\n      }\n    });\n  }\n}); // Création du routing de vérification grâce à Flowrouter. \n\nTemplate.register.events({\n'submit #register-form' : function(e, t) {\n  e.preventDefault();\n  var email = t.find('#account-email').value\n    , password = t.find('#account-password').value;\n\n    // Trim and validate the input\n\n  Accounts.onCreateUser({email: email, password : password}, function(err){\n      if (err) {\n        // Inform the user that account creation failed\n      } else {\n        // Success. Account has been created and the user\n        // has logged in successfully.\n       Accounts.sendVerificationEmail(this.userId, email);\n      }\n    });\n\n  return false;\n}  });\n// Fin de la partie LOGIN \n\nTemplate.rechercheAnnonce.events({\n  'submit.search': function(Author, Title){\n    event.preventDefault();\n// rechercher une annonce par son titre ou son utilisateur\nvar Author = $('[name=author]').val();\nvar Title = $('[name=title]').val();\nconsole.log(AnnonceList.find({$or:[{\"author\":\"Author\"},{\"title\":\"Title\"}]}).fetch());}});\n// Afficher annonces par utilisateur\nvar username = Meteor.userId();\nconsole.log(AnnonceList.find(username));\nTemplate.body.helpers({\n  AnnonceList() {\n    return AnnonceList.find({});\n  },\n});\n\nTemplate.body.helpers({\n    // définit le contexte de résultats\n  'result' : function(){\n    var listRes = Session.get('selectedbook');\n    console.log(listRes);\n    Session.set('listResult', listRes);\n    return listRes;\n  }\n});\n\nTemplate.resultat.helpers({\n  'selectedClass' : function(){\n    var bookChoisi = this.id;\n    var livreclicked = Session.get('livreclicked', bookChoisi);\n    if(bookChoisi == livreclicked){\n      return \"selected\";\n    }\n\n  }\n})\n\nTemplate.ajout.events({\n  'click .SearchIPA': function(){\n      var infolivre = (document.forms['searchitem'].champinfo.value);\n      var stringsearch=\"https://www.googleapis.com/books/v1/volumes?q=search+\"+infolivre;\n      alert(\"requête envoyée: \"+stringsearch);\n      var data;\n      $.get(stringsearch, function(data){\n        alert(\"Données reçues: \"+data);\n        Session.set('selectedbook', data.items);\n      });           \n  }\n})\n\nTemplate.resultat.events({\n   'click .book': function(){\n    var bookChoisi = this.id;\n    console.log(bookChoisi);\n    Session.set('livreclicked', bookChoisi);\n  }\n})\n\nTemplate.body.events({\n  'click .AddAnnonce' : function(){   \n      var chain = $(\"#koala\").html();\n      console.log(chain);\n      chain = chain.split(/<br>/);\n      console.log(chain);\n      var tit = chain[0];\n      var aut = chain[1];\n      var img = chain[2];\n      var rem = document.forms['ad'].com.value;\n      var price = document.forms['ad'].price.value;\n      var cont = document.forms['ad'].cont.value;\n      AnnonceList.insert(\n        {\n          title: chain[0],\n          author: chain[1],\n          prix: price,\n          contact: cont,\n          remarque: rem\n\n        }\n      ); \n  }\n\n})"]}}]