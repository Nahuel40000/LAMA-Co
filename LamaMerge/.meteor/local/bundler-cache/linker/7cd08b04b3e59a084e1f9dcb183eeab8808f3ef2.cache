[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nAutoForm = Package['aldeed:autoform'].AutoForm;\nBert = Package['themeteorchef:bert'].Bert;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nSimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nMongoObject = Package['aldeed:simple-schema'].MongoObject;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"main.html\":[\"./template.main.js\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/main.html                                                                                                 //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nmodule.exports = require(\"./template.main.js\");                                                                     // 1\n                                                                                                                    // 2\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"template.main.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/template.main.js                                                                                          //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n                                                                                                                    // 1\nTemplate.body.addContent((function() {                                                                              // 2\n  var view = this;                                                                                                  // 3\n  return [ Spacebars.include(view.lookupTemplate(\"accueil\")), \"\\n  \\n  \", Blaze.Unless(function() {                 // 4\n    return Spacebars.call(Spacebars.dot(view.lookup(\"currentUser\"), \"emails\", \"0\", \"verified\"));                    // 5\n  }, function() {                                                                                                   // 6\n    return [ \"\\n  \", Blaze._TemplateWith(function() {                                                               // 7\n      return Spacebars.dataMustache(view.lookup(\"de\"), view.lookup(\"compte\"));                                      // 8\n    }, function() {                                                                                                 // 9\n      return Spacebars.include(view.lookupTemplate(\"Création\"));                                                    // 10\n    }), \"\\n  \" ];                                                                                                   // 11\n  }), \" \\n\\n\\n  \", Blaze.Unless(function() {                                                                        // 12\n    return Spacebars.call(Spacebars.dot(view.lookup(\"currentUser\"), \"emails\", \"0\", \"verified\"));                    // 13\n  }, function() {                                                                                                   // 14\n    return [ \"\\n  \", Spacebars.include(view.lookupTemplate(\"index\")), \"\\n  \" ];                                     // 15\n  }, function() {                                                                                                   // 16\n    return [ \"\\n  \", HTML.P(\"----------------------------------\"), \"\\n  \", Spacebars.include(view.lookupTemplate(\"recherche\")), \"\\n  \", HTML.P(\"----------------------------------\"), \"\\n  \", Spacebars.include(view.lookupTemplate(\"affichage_annonce\")), \"\\n  \", HTML.P(\"----------------------------------\"), \"\\n  \", HTML.H2(\"Insert:\"), \"\\n  \", HTML.Comment(\"{{> creer_annonce}}\"), \"\\n  \", Spacebars.include(view.lookupTemplate(\"insertAnnonceForm\")), \"\\n  \", HTML.P(\"----------------------------------\"), \"\\n  \", HTML.H2(\"Update:\"), \"\\n  \", Spacebars.include(view.lookupTemplate(\"updateAnnonceForm\")), \"\\n  \", HTML.P(\"----------------------------------\"), \"\\n  \", Spacebars.include(view.lookupTemplate(\"grouper_annonce\")), \"\\n  \" ];\n  }) ];                                                                                                             // 18\n}));                                                                                                                // 19\nMeteor.startup(Template.body.renderToDocument);                                                                     // 20\n                                                                                                                    // 21\nTemplate.__checkName(\"accueil\");                                                                                    // 22\nTemplate[\"accueil\"] = new Template(\"Template.accueil\", (function() {                                                // 23\n  var view = this;                                                                                                  // 24\n  return HTML.Raw(\"<h1>Bienvenue sur l'app LAMA</h1>\");                                                             // 25\n}));                                                                                                                // 26\n                                                                                                                    // 27\nTemplate.__checkName(\"Création de compte\");                                                                         // 28\nTemplate[\"Création de compte\"] = new Template(\"Template.Création de compte\", (function() {                          // 29\n  var view = this;                                                                                                  // 30\n  return HTML.Raw('<div class=\"row\">\\n    <div class=\"col-xs-12 col-sm-6 col-md-4\">\\n      <h4 class=\"page-header\">Sign Up</h4>\\n      <form id=\"signup\" class=\"signup\">\\n        <div class=\"form-group\">\\n          <label for=\"emailAddress\">Email Address</label>\\n          <input type=\"email\" name=\"emailAddress\" class=\"form-control\" placeholder=\"Email Address\">\\n        </div>\\n        <div class=\"form-group\">\\n          <label for=\"password\">Password</label>\\n          <input type=\"password\" name=\"password\" class=\"form-control\" placeholder=\"Password\">\\n        </div>\\n        <div class=\"form-group\">\\n          <input type=\"submit\" class=\"btn btn-success\" value=\"Créer le compte\">\\n        </div>\\n      </form>\\n    </div>\\n  </div>');\n}));                                                                                                                // 32\n                                                                                                                    // 33\nTemplate.__checkName(\"index\");                                                                                      // 34\nTemplate[\"index\"] = new Template(\"Template.index\", (function() {                                                    // 35\n  var view = this;                                                                                                  // 36\n  return HTML.Raw('<p class=\"alert alert-warning\">Vous devez procéder à la vérification de compte via le lien envoyé automatiquement à l\\'adresse email que vous avez spécifiée avant de pouvoir utiliser Unibooks. <a href=\"#\" class=\"resend-verification-link\">Renvoyer le lien de vérification</a>.</p>');\n}));                                                                                                                // 38\n                                                                                                                    // 39\nTemplate.__checkName(\"recherche\");                                                                                  // 40\nTemplate[\"recherche\"] = new Template(\"Template.recherche\", (function() {                                            // 41\n  var view = this;                                                                                                  // 42\n  return HTML.Raw('<p>Rechercher un livre:</p>\\n  <form>\\n    Entrer l\\'ISBN, le titre du livre ou l\\'auteur: <input type=\"text\">\\n    <input type=\"button\" value=\"Rechercher\">\\n  </form>');\n}));                                                                                                                // 44\n                                                                                                                    // 45\nTemplate.__checkName(\"affichage_annonce\");                                                                          // 46\nTemplate[\"affichage_annonce\"] = new Template(\"Template.affichage_annonce\", (function() {                            // 47\n  var view = this;                                                                                                  // 48\n  return HTML.Raw(\"<p>Annonces disponibles:</p>\\n  <ul>\\n    <li>\\n      Annonce 1\\n      <div>Prix</div> <br>\\n    </li>\\n    <li>\\n      Annonce 2\\n      <div>Prix</div> <br>\\n    </li>\\n    <li>\\n      Annonce 3\\n      <div>Prix</div> <br>\\n    </li>\\n  </ul>\");\n}));                                                                                                                // 50\n                                                                                                                    // 51\nTemplate.__checkName(\"insertAnnonceForm\");                                                                          // 52\nTemplate[\"insertAnnonceForm\"] = new Template(\"Template.insertAnnonceForm\", (function() {                            // 53\n  var view = this;                                                                                                  // 54\n  return Blaze._TemplateWith(function() {                                                                           // 55\n    return {                                                                                                        // 56\n      collection: Spacebars.call(\"AnnonceList\"),                                                                    // 57\n      id: Spacebars.call(\"insertAnnonceForm\"),                                                                      // 58\n      type: Spacebars.call(\"insert\")                                                                                // 59\n    };                                                                                                              // 60\n  }, function() {                                                                                                   // 61\n    return Spacebars.include(view.lookupTemplate(\"quickForm\"));                                                     // 62\n  });                                                                                                               // 63\n}));                                                                                                                // 64\n                                                                                                                    // 65\nTemplate.__checkName(\"updateAnnonceForm\");                                                                          // 66\nTemplate[\"updateAnnonceForm\"] = new Template(\"Template.updateAnnonceForm\", (function() {                            // 67\n  var view = this;                                                                                                  // 68\n  return Blaze._TemplateWith(function() {                                                                           // 69\n    return {                                                                                                        // 70\n      collection: Spacebars.call(\"AnnonceList\"),                                                                    // 71\n      id: Spacebars.call(\"updateAnnonceForm\"),                                                                      // 72\n      type: Spacebars.call(\"update\")                                                                                // 73\n    };                                                                                                              // 74\n  }, function() {                                                                                                   // 75\n    return Spacebars.include(view.lookupTemplate(\"quickForm\"));                                                     // 76\n  });                                                                                                               // 77\n}));                                                                                                                // 78\n                                                                                                                    // 79\nTemplate.__checkName(\"grouper_annonce\");                                                                            // 80\nTemplate[\"grouper_annonce\"] = new Template(\"Template.grouper_annonce\", (function() {                                // 81\n  var view = this;                                                                                                  // 82\n  return HTML.Raw('Grouper mes annonces: <br>\\n  <ul>\\n    <li>\\n      Annonce 1\\n      <input type=\"checkbox\">\\n    </li>\\n    <br>\\n    <li>\\n      Annonce 2\\n      <input type=\"checkbox\">\\n    </li>\\n    <br>\\n    <li>\\n      Annonce 3\\n      <input type=\"checkbox\">\\n    </li>\\n    <br>\\n    <li>\\n      Annonce 4\\n      <input type=\"checkbox\">\\n    </li>\\n    <br>\\n    <li>\\n      Annonce 5\\n      <input type=\"checkbox\">\\n    </li>\\n    <br>\\n  </ul>\\n  <form>\\n    <input type=\"text\" placeholder=\"prix de groupe\">\\n    <input type=\"button\" value=\"Grouper\">\\n  </form>');\n}));                                                                                                                // 84\n                                                                                                                    // 85\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":[\"meteor/templating\",\"meteor/reactive-var\",\"meteor/mongo\",\"./main.html\",function(require){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/main.js                                                                                                   //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nvar _templating = require('meteor/templating');                                                                     // 1\n                                                                                                                    //\nvar _reactiveVar = require('meteor/reactive-var');                                                                  // 2\n                                                                                                                    //\nvar _mongo = require('meteor/mongo');                                                                               // 3\n                                                                                                                    //\nrequire('./main.html');                                                                                             // 4\n                                                                                                                    //\nAnnonceList = new _mongo.Mongo.Collection('annonce');                                                               // 6\n                                                                                                                    //\nAnnonceList.attachSchema(new SimpleSchema({                                                                         // 8\n  title: {                                                                                                          // 9\n    type: String,                                                                                                   // 10\n    label: \"Title\",                                                                                                 // 11\n    max: 200                                                                                                        // 12\n  },                                                                                                                //\n  author: {                                                                                                         // 14\n    type: String,                                                                                                   // 15\n    label: \"Author\"                                                                                                 // 16\n  },                                                                                                                //\n  copies: {                                                                                                         // 18\n    type: Number,                                                                                                   // 19\n    label: \"Number of copies\",                                                                                      // 20\n    min: 0                                                                                                          // 21\n  },                                                                                                                //\n  etat: {                                                                                                           // 23\n    type: String,                                                                                                   // 24\n    label: \"Etat du livre\"                                                                                          // 25\n  },                                                                                                                //\n  remarque: {                                                                                                       // 27\n    type: String,                                                                                                   // 28\n    label: \"Remarque\",                                                                                              // 29\n    optional: true,                                                                                                 // 30\n    max: 1000                                                                                                       // 31\n  }                                                                                                                 //\n}));                                                                                                                //\n                                                                                                                    //\n// Toute cette partie contient du code lié au LOGIN                                                                 //\n                                                                                                                    //\n_templating.Template.signup.events({                                                                                // 38\n  'submit form': function () {                                                                                      // 39\n    function submitForm(event, template) {                                                                          //\n      event.preventDefault(); // création d'une event lorsque l'utilisateur soumet sa demande de création de compte\n                                                                                                                    //\n      var user = {                                                                                                  // 39\n        email: template.find('[name=\"emailAddress\"]').value,                                                        // 43\n        password: template.find('[name=\"password\"]').value                                                          // 44\n      }; // récupération de l'email de l'utilisateur demandant la création de compte                                //\n                                                                                                                    //\n      Accounts.createUser(user, function (error) {                                                                  // 39\n        if (error) {                                                                                                // 48\n          Bert.alert(error.reason, 'danger');                                                                       // 49\n        } else {                                                                                                    //\n          Meteor.call('sendVerificationLink', function (error, response) {                                          // 51\n            if (error) {                                                                                            // 52\n              Bert.alert(error.reason, 'danger');                                                                   // 53\n            } else {                                                                                                //\n              Bert.alert('Bienvenue!', 'success');                                                                  // 55\n            }                                                                                                       //\n          });                                                                                                       //\n        }                                                                                                           //\n      });                                                                                                           //\n    }                                                                                                               //\n                                                                                                                    //\n    return submitForm;                                                                                              //\n  }()                                                                                                               //\n}); // Génère des alertes grâce à Bert en fonction des données entrées par l'utilisateur (mauvais mdp, email. etc.)\n                                                                                                                    //\n_templating.Template.index.events({                                                                                 // 65\n  'click .resend-verification-link': function () {                                                                  // 66\n    function clickResendVerificationLink(event, template) {                                                         //\n      Meteor.call('sendVerificationLink', function (error, response) {                                              // 67\n        if (error) {                                                                                                // 68\n          Bert.alert(error.reason, 'danger');                                                                       // 69\n        } else {                                                                                                    //\n          var email = Meteor.user().emails[0].address;                                                              // 71\n          Bert.alert('Vérification envoyée à ' + email + '!', 'success');                                           // 72\n        }                                                                                                           //\n      });                                                                                                           //\n    }                                                                                                               //\n                                                                                                                    //\n    return clickResendVerificationLink;                                                                             //\n  }()                                                                                                               //\n}); // lien pour renvoyé un mail de vérification au format alerte Bert                                              //\n                                                                                                                    //\nFlowRouter.route('/verify-email/:token', {                                                                          // 78\n  name: 'verify-email',                                                                                             // 79\n  action: function () {                                                                                             // 80\n    function action(params) {                                                                                       //\n      Accounts.verifyEmail(params.token, function (error) {                                                         // 81\n        if (error) {                                                                                                // 82\n          Bert.alert(error.reason, 'danger');                                                                       // 83\n        } else {                                                                                                    //\n          FlowRouter.go('/');                                                                                       // 85\n          Bert.alert('Vérification réussie! Merci et bonne visite!', 'success');                                    // 86\n        }                                                                                                           //\n      });                                                                                                           //\n    }                                                                                                               //\n                                                                                                                    //\n    return action;                                                                                                  //\n  }()                                                                                                               //\n}); // Création du routing de vérification grâce à Flowrouter.                                                      //\n                                                                                                                    //\n// Fin de la partie LOGIN                                                                                           //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./client/template.main.js\");\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["client/main.html","/client/template.main.js","/client/main.js"],"names":[],"mappings":";;;;;;;;AAAA;AACA,wH;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yH;;;;;;;;;;;ACpFA;;AACA;;AACA;;AACA;;AAEA,cAAc,IAAI,aAAM,UAAN,CAAiB,SAArB,CAAd;;AAEA,YAAY,YAAZ,CAAyB,IAAI,YAAJ,CAAiB;AACxC,SAAO;AACL,UAAM,MAAN;AACA,WAAO,OAAP;AACA,SAAK,GAAL;GAHF;AAKA,UAAQ;AACN,UAAM,MAAN;AACA,WAAO,QAAP;GAFF;AAIA,UAAQ;AACN,UAAM,MAAN;AACA,WAAO,kBAAP;AACA,SAAK,CAAL;GAHF;AAKA,QAAM;AACJ,UAAM,MAAN;AACA,WAAO,eAAP;GAFF;AAIA,YAAU;AACR,UAAM,MAAN;AACA,WAAO,UAAP;AACA,cAAU,IAAV;AACA,SAAK,IAAL;GAJF;CAnBuB,CAAzB;;;;AA8BA,qBAAS,MAAT,CAAgB,MAAhB,CAAuB;AACrB;wBAAgB,OAAO,UAAW;AAChC,YAAM,cAAN;;AADgC,UAG5B,OAAO;AACT,eAAO,SAAS,IAAT,CAAe,uBAAf,EAAyC,KAAzC;AACP,kBAAU,SAAS,IAAT,CAAe,mBAAf,EAAqC,KAArC;OAFR;;AAH4B,cAQhC,CAAS,UAAT,CAAqB,IAArB,EAA2B,UAAE,KAAF,EAAa;AACtC,YAAK,KAAL,EAAa;AACX,eAAK,KAAL,CAAY,MAAM,MAAN,EAAc,QAA1B,EADW;SAAb,MAEO;AACL,iBAAO,IAAP,CAAa,sBAAb,EAAqC,UAAE,KAAF,EAAS,QAAT,EAAuB;AAC1D,gBAAK,KAAL,EAAa;AACX,mBAAK,KAAL,CAAY,MAAM,MAAN,EAAc,QAA1B,EADW;aAAb,MAEO;AACL,mBAAK,KAAL,CAAY,YAAZ,EAA0B,SAA1B,EADK;aAFP;WADmC,CAArC,CADK;SAFP;OADyB,CAA3B,CARgC;;;;KADb;CAAvB;;AA2BA,qBAAS,KAAT,CAAe,MAAf,CAAsB;AACpB;yCAAoC,OAAO,UAAW;AACpD,aAAO,IAAP,CAAa,sBAAb,EAAqC,UAAE,KAAF,EAAS,QAAT,EAAuB;AAC1D,YAAK,KAAL,EAAa;AACX,eAAK,KAAL,CAAY,MAAM,MAAN,EAAc,QAA1B,EADW;SAAb,MAEO;AACL,cAAI,QAAQ,OAAO,IAAP,GAAc,MAAd,CAAsB,CAAtB,EAA0B,OAA1B,CADP;AAEL,eAAK,KAAL,6BAAuC,WAAvC,EAAkD,SAAlD,EAFK;SAFP;OADmC,CAArC,CADoD;;;;KADlC;CAAtB;;AAaA,WAAW,KAAX,CAAkB,sBAAlB,EAA0C;AACxC,QAAM,cAAN;AACA;oBAAQ,QAAS;AACf,eAAS,WAAT,CAAsB,OAAO,KAAP,EAAc,UAAE,KAAF,EAAY;AAC9C,YAAK,KAAL,EAAa;AACX,eAAK,KAAL,CAAY,MAAM,MAAN,EAAc,QAA1B,EADW;SAAb,MAEO;AACL,qBAAW,EAAX,CAAe,GAAf,EADK;AAEL,eAAK,KAAL,CAAY,8CAAZ,EAA4D,SAA5D,EAFK;SAFP;OADkC,CAApC,CADe;;;;KAFuB;CAA1C","file":"/app.js","sourcesContent":["module.exports = require(\"./template.main.js\");\n","\nTemplate.body.addContent((function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"accueil\")), \"\\n  \\n  \", Blaze.Unless(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"currentUser\"), \"emails\", \"0\", \"verified\"));\n  }, function() {\n    return [ \"\\n  \", Blaze._TemplateWith(function() {\n      return Spacebars.dataMustache(view.lookup(\"de\"), view.lookup(\"compte\"));\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"Création\"));\n    }), \"\\n  \" ];\n  }), \" \\n\\n\\n  \", Blaze.Unless(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"currentUser\"), \"emails\", \"0\", \"verified\"));\n  }, function() {\n    return [ \"\\n  \", Spacebars.include(view.lookupTemplate(\"index\")), \"\\n  \" ];\n  }, function() {\n    return [ \"\\n  \", HTML.P(\"----------------------------------\"), \"\\n  \", Spacebars.include(view.lookupTemplate(\"recherche\")), \"\\n  \", HTML.P(\"----------------------------------\"), \"\\n  \", Spacebars.include(view.lookupTemplate(\"affichage_annonce\")), \"\\n  \", HTML.P(\"----------------------------------\"), \"\\n  \", HTML.H2(\"Insert:\"), \"\\n  \", HTML.Comment(\"{{> creer_annonce}}\"), \"\\n  \", Spacebars.include(view.lookupTemplate(\"insertAnnonceForm\")), \"\\n  \", HTML.P(\"----------------------------------\"), \"\\n  \", HTML.H2(\"Update:\"), \"\\n  \", Spacebars.include(view.lookupTemplate(\"updateAnnonceForm\")), \"\\n  \", HTML.P(\"----------------------------------\"), \"\\n  \", Spacebars.include(view.lookupTemplate(\"grouper_annonce\")), \"\\n  \" ];\n  }) ];\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"accueil\");\nTemplate[\"accueil\"] = new Template(\"Template.accueil\", (function() {\n  var view = this;\n  return HTML.Raw(\"<h1>Bienvenue sur l'app LAMA</h1>\");\n}));\n\nTemplate.__checkName(\"Création de compte\");\nTemplate[\"Création de compte\"] = new Template(\"Template.Création de compte\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"row\">\\n    <div class=\"col-xs-12 col-sm-6 col-md-4\">\\n      <h4 class=\"page-header\">Sign Up</h4>\\n      <form id=\"signup\" class=\"signup\">\\n        <div class=\"form-group\">\\n          <label for=\"emailAddress\">Email Address</label>\\n          <input type=\"email\" name=\"emailAddress\" class=\"form-control\" placeholder=\"Email Address\">\\n        </div>\\n        <div class=\"form-group\">\\n          <label for=\"password\">Password</label>\\n          <input type=\"password\" name=\"password\" class=\"form-control\" placeholder=\"Password\">\\n        </div>\\n        <div class=\"form-group\">\\n          <input type=\"submit\" class=\"btn btn-success\" value=\"Créer le compte\">\\n        </div>\\n      </form>\\n    </div>\\n  </div>');\n}));\n\nTemplate.__checkName(\"index\");\nTemplate[\"index\"] = new Template(\"Template.index\", (function() {\n  var view = this;\n  return HTML.Raw('<p class=\"alert alert-warning\">Vous devez procéder à la vérification de compte via le lien envoyé automatiquement à l\\'adresse email que vous avez spécifiée avant de pouvoir utiliser Unibooks. <a href=\"#\" class=\"resend-verification-link\">Renvoyer le lien de vérification</a>.</p>');\n}));\n\nTemplate.__checkName(\"recherche\");\nTemplate[\"recherche\"] = new Template(\"Template.recherche\", (function() {\n  var view = this;\n  return HTML.Raw('<p>Rechercher un livre:</p>\\n  <form>\\n    Entrer l\\'ISBN, le titre du livre ou l\\'auteur: <input type=\"text\">\\n    <input type=\"button\" value=\"Rechercher\">\\n  </form>');\n}));\n\nTemplate.__checkName(\"affichage_annonce\");\nTemplate[\"affichage_annonce\"] = new Template(\"Template.affichage_annonce\", (function() {\n  var view = this;\n  return HTML.Raw(\"<p>Annonces disponibles:</p>\\n  <ul>\\n    <li>\\n      Annonce 1\\n      <div>Prix</div> <br>\\n    </li>\\n    <li>\\n      Annonce 2\\n      <div>Prix</div> <br>\\n    </li>\\n    <li>\\n      Annonce 3\\n      <div>Prix</div> <br>\\n    </li>\\n  </ul>\");\n}));\n\nTemplate.__checkName(\"insertAnnonceForm\");\nTemplate[\"insertAnnonceForm\"] = new Template(\"Template.insertAnnonceForm\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      collection: Spacebars.call(\"AnnonceList\"),\n      id: Spacebars.call(\"insertAnnonceForm\"),\n      type: Spacebars.call(\"insert\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"quickForm\"));\n  });\n}));\n\nTemplate.__checkName(\"updateAnnonceForm\");\nTemplate[\"updateAnnonceForm\"] = new Template(\"Template.updateAnnonceForm\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      collection: Spacebars.call(\"AnnonceList\"),\n      id: Spacebars.call(\"updateAnnonceForm\"),\n      type: Spacebars.call(\"update\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"quickForm\"));\n  });\n}));\n\nTemplate.__checkName(\"grouper_annonce\");\nTemplate[\"grouper_annonce\"] = new Template(\"Template.grouper_annonce\", (function() {\n  var view = this;\n  return HTML.Raw('Grouper mes annonces: <br>\\n  <ul>\\n    <li>\\n      Annonce 1\\n      <input type=\"checkbox\">\\n    </li>\\n    <br>\\n    <li>\\n      Annonce 2\\n      <input type=\"checkbox\">\\n    </li>\\n    <br>\\n    <li>\\n      Annonce 3\\n      <input type=\"checkbox\">\\n    </li>\\n    <br>\\n    <li>\\n      Annonce 4\\n      <input type=\"checkbox\">\\n    </li>\\n    <br>\\n    <li>\\n      Annonce 5\\n      <input type=\"checkbox\">\\n    </li>\\n    <br>\\n  </ul>\\n  <form>\\n    <input type=\"text\" placeholder=\"prix de groupe\">\\n    <input type=\"button\" value=\"Grouper\">\\n  </form>');\n}));\n","import { Template } from 'meteor/templating';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Mongo } from 'meteor/mongo';\nimport './main.html';\n\nAnnonceList = new Mongo.Collection('annonce');\n\nAnnonceList.attachSchema(new SimpleSchema({\n  title: {\n    type: String,\n    label: \"Title\",\n    max: 200\n  },\n  author: {\n    type: String,\n    label: \"Author\"\n  },\n  copies: {\n    type: Number,\n    label: \"Number of copies\",\n    min: 0\n  },\n  etat: {\n    type: String,\n    label: \"Etat du livre\"\n  },\n  remarque: {\n    type: String,\n    label: \"Remarque\",\n    optional: true,\n    max: 1000\n  }\n}));\n\t\n\n// Toute cette partie contient du code lié au LOGIN \n  \nTemplate.signup.events({\n  'submit form' ( event, template ) {\n    event.preventDefault(); // création d'une event lorsque l'utilisateur soumet sa demande de création de compte\n    \n    let user = {\n      email: template.find( '[name=\"emailAddress\"]' ).value,\n      password: template.find( '[name=\"password\"]' ).value\n    }; // récupération de l'email de l'utilisateur demandant la création de compte\n\n    Accounts.createUser( user, ( error ) => {\n      if ( error ) {\n        Bert.alert( error.reason, 'danger' );\n      } else {\n        Meteor.call( 'sendVerificationLink', ( error, response ) => {\n          if ( error ) {\n            Bert.alert( error.reason, 'danger' );\n          } else {\n            Bert.alert( 'Bienvenue!', 'success' );\n          }\n        });\n      }\n    });\n  }\n}); // Génère des alertes grâce à Bert en fonction des données entrées par l'utilisateur (mauvais mdp, email. etc.)\n\n\n\nTemplate.index.events({\n  'click .resend-verification-link' ( event, template ) {\n    Meteor.call( 'sendVerificationLink', ( error, response ) => {\n      if ( error ) {\n        Bert.alert( error.reason, 'danger' );\n      } else {\n        let email = Meteor.user().emails[ 0 ].address;\n        Bert.alert( `Vérification envoyée à ${ email }!`, 'success' );\n      }\n    });\n  }\n}); // lien pour renvoyé un mail de vérification au format alerte Bert\n\nFlowRouter.route( '/verify-email/:token', {\n  name: 'verify-email',\n  action( params ) {\n    Accounts.verifyEmail( params.token, ( error ) =>{\n      if ( error ) {\n        Bert.alert( error.reason, 'danger' );\n      } else {\n        FlowRouter.go( '/' );\n        Bert.alert( 'Vérification réussie! Merci et bonne visite!', 'success' );\n      }\n    });\n  }\n}); // Création du routing de vérification grâce à Flowrouter. \n\n// Fin de la partie LOGIN \n"]}}]