[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nSimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nMongoObject = Package['aldeed:simple-schema'].MongoObject;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"server\":{\"main.js\":[\"meteor/meteor\",function(require){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// server/main.js                                                                                               //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nvar _meteor = require('meteor/meteor');                                                                         // 1\n                                                                                                                //\n_meteor.Meteor.startup(function () {                                                                            // 3\n  // code to run on server at startup                                                                           //\n  /*  if(AnnonceList.find().count() === 0){                                                                     //\n                                                                                                                //\n    \tAnnonceList.insert({title: \"Cat on a Hot Tin Roof\", author: \"Tennessee Williams\", prix: 10, etat: \"bon\"});\n    \tAnnonceList.insert({title: \"Sherlock Holms\", author: \"Arthur Conan Doyle\", prix: 8, etat: \"moyen\"});       //\n    }AnnonceList.insert({title: \"Les fleurs du mal\", author: \"Beaudelaire\", prix: 15, etat: \"mauvais\"});        //\n  }                                                                                                             //\n  */                                                                                                            //\n});                                                                                                             //\n                                                                                                                //\nAccounts.config({ restrictCreationByEmailDomain: 'unil.ch', sendVerificationEmail: true }); // restriction du domaine mail\n                                                                                                                //\nAnnonceList = new Mongo.Collection('annonce');                                                                  // 17\n                                                                                                                //\n//package Collection2 pour la structure de la DB --> je vais encore le changer pour que ça corresponde à ce qu'on avait dit (c'était juste pour tester)\nAnnonceList.attachSchema(new SimpleSchema({                                                                     // 20\n  title: {                                                                                                      // 21\n    type: String,                                                                                               // 22\n    label: \"Title\",                                                                                             // 23\n    max: 200                                                                                                    // 24\n  },                                                                                                            //\n  author: {                                                                                                     // 26\n    type: String,                                                                                               // 27\n    label: \"Author\"                                                                                             // 28\n  },                                                                                                            //\n  etat: {                                                                                                       // 30\n    type: String,                                                                                               // 31\n    label: \"Etat du livre\"                                                                                      // 32\n  },                                                                                                            //\n  remarque: {                                                                                                   // 34\n    type: String,                                                                                               // 35\n    label: \"Remarque\",                                                                                          // 36\n    optional: true,                                                                                             // 37\n    max: 1000                                                                                                   // 38\n  },                                                                                                            //\n  prix: {                                                                                                       // 40\n    type: Number,                                                                                               // 41\n    label: \"Prix\",                                                                                              // 42\n    min: 0                                                                                                      // 43\n  }                                                                                                             //\n}));                                                                                                            //\n                                                                                                                //\n//db.AnnonceList.find.sort ({ $or: [{ \"Author\": 1, {\"Title\": 1}]})                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/server/main.js"],"names":[],"mappings":";;;;;;;;AAAA;;AAEA,eAAO,OAAP,CAAe,YAAM;;;;;;;;;CAAN,CAAf;;AAWA,SAAS,MAAT,CAAgB,EAAC,+BAA8B,SAA9B,EAAyC,uBAAuB,IAAvB,EAA1D;;AAGA,cAAc,IAAI,MAAM,UAAN,CAAiB,SAArB,CAAd;;;AAGA,YAAY,YAAZ,CAAyB,IAAI,YAAJ,CAAiB;AACxC,SAAO;AACL,UAAM,MAAN;AACA,WAAO,OAAP;AACA,SAAK,GAAL;GAHF;AAKA,UAAQ;AACN,UAAM,MAAN;AACA,WAAO,QAAP;GAFF;AAIA,QAAM;AACJ,UAAM,MAAN;AACA,WAAO,eAAP;GAFF;AAIA,YAAU;AACR,UAAM,MAAN;AACA,WAAO,UAAP;AACA,cAAU,IAAV;AACA,SAAK,IAAL;GAJF;AAMC,QAAM;AACL,UAAM,MAAN;AACA,WAAO,MAAP;AACA,SAAK,CAAL;GAHD;CApBsB,CAAzB","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n/*  if(AnnonceList.find().count() === 0){\n\n  \tAnnonceList.insert({title: \"Cat on a Hot Tin Roof\", author: \"Tennessee Williams\", prix: 10, etat: \"bon\"});\n  \tAnnonceList.insert({title: \"Sherlock Holms\", author: \"Arthur Conan Doyle\", prix: 8, etat: \"moyen\"});\n  }AnnonceList.insert({title: \"Les fleurs du mal\", author: \"Beaudelaire\", prix: 15, etat: \"mauvais\"});\n}\n*/\n});\n\nAccounts.config({restrictCreationByEmailDomain:'unil.ch', sendVerificationEmail: true}); // restriction du domaine mail\n\n\nAnnonceList = new Mongo.Collection('annonce');\n\n//package Collection2 pour la structure de la DB --> je vais encore le changer pour que ça corresponde à ce qu'on avait dit (c'était juste pour tester)\nAnnonceList.attachSchema(new SimpleSchema({\n  title: {\n    type: String,\n    label: \"Title\",\n    max: 200\n  },\n  author: {\n    type: String,\n    label: \"Author\"\n  },\n  etat: {\n    type: String,\n    label: \"Etat du livre\"\n  },\n  remarque: {\n    type: String,\n    label: \"Remarque\",\n    optional: true,\n    max: 1000\n  },\n   prix: {\n    type: Number,\n    label: \"Prix\",\n    min: 0\n  }  \n}));\n\n//db.AnnonceList.find.sort ({ $or: [{ \"Author\": 1, {\"Title\": 1}]})"]}}]