[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Mongo = Package.mongo.Mongo;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar LocalCollection = Package.minimongo.LocalCollection;\nvar Minimongo = Package.minimongo.Minimongo;\n\n/* Package-scope variables */\nvar CollectionExtensions;\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// packages/lai_collection-extensions/packages/lai_collection-extensions.js                         //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\n(function () {                                                                                      // 1\n                                                                                                    // 2\n///////////////////////////////////////////////////////////////////////////////////////////////     // 3\n//                                                                                           //     // 4\n// packages/lai:collection-extensions/collection-extensions.js                               //     // 5\n//                                                                                           //     // 6\n///////////////////////////////////////////////////////////////////////////////////////////////     // 7\n                                                                                             //     // 8\n// The collection extensions namespace                                                       // 1   // 9\nCollectionExtensions = {};                                                                   // 2   // 10\n                                                                                             // 3   // 11\n// Stores all the collection extensions                                                      // 4   // 12\nCollectionExtensions._extensions = [];                                                       // 5   // 13\n                                                                                             // 6   // 14\n// This is where you would add custom functionality to                                       // 7   // 15\n// Mongo.Collection/Meteor.Collection                                                        // 8   // 16\nMeteor.addCollectionExtension = function (customFunction) {                                  // 9   // 17\n  if (typeof customFunction !== 'function') {                                                // 10  // 18\n    throw new Meteor.Error(                                                                  // 11  // 19\n      'collection-extension-wrong-argument',                                                 // 12  // 20\n      'You must pass a function \\\n       into Meteor.addCollectionExtension().');                                              // 14  // 22\n  }                                                                                          // 15  // 23\n  CollectionExtensions._extensions.push(customFunction);                                     // 16  // 24\n  // If Meteor.users exists, apply the extension right away                                  // 17  // 25\n  if (typeof Meteor.users !== 'undefined') {                                                 // 18  // 26\n    customFunction.apply(Meteor.users, ['users']);                                           // 19  // 27\n  }                                                                                          // 20  // 28\n};                                                                                           // 21  // 29\n                                                                                             // 22  // 30\n// Utility function to add a prototype function to your                                      // 23  // 31\n// Meteor/Mongo.Collection object                                                            // 24  // 32\nMeteor.addCollectionPrototype = function (name, customFunction) {                            // 25  // 33\n  if (typeof name !== 'string') {                                                            // 26  // 34\n    throw new Meteor.Error(                                                                  // 27  // 35\n      'collection-extension-wrong-argument',                                                 // 28  // 36\n      'You must pass a string as the first argument \\\n       into Meteor.addCollectionPrototype().');                                              // 30  // 38\n  }                                                                                          // 31  // 39\n  if (typeof customFunction !== 'function') {                                                // 32  // 40\n    throw new Meteor.Error(                                                                  // 33  // 41\n      'collection-extension-wrong-argument',                                                 // 34  // 42\n      'You must pass a function as the second argument \\\n       into Meteor.addCollectionPrototype().');                                              // 36  // 44\n  }                                                                                          // 37  // 45\n  (typeof Mongo !== 'undefined' ?                                                            // 38  // 46\n    Mongo.Collection :                                                                       // 39  // 47\n    Meteor.Collection).prototype[name] = customFunction;                                     // 40  // 48\n};                                                                                           // 41  // 49\n                                                                                             // 42  // 50\n// This is used to reassign the prototype of unfortunately                                   // 43  // 51\n// and unstoppably already instantiated Mongo instances                                      // 44  // 52\n// i.e. Meteor.users                                                                         // 45  // 53\nCollectionExtensions._reassignCollectionPrototype = function (instance, constr) {            // 46  // 54\n  var hasSetPrototypeOf = typeof Object.setPrototypeOf === 'function';                       // 47  // 55\n                                                                                             // 48  // 56\n  if (!constr) constr = typeof Mongo !== 'undefined' ? Mongo.Collection : Meteor.Collection; // 49  // 57\n                                                                                             // 50  // 58\n  // __proto__ is not available in < IE11                                                    // 51  // 59\n  // Note: Assigning a prototype dynamically has performance implications                    // 52  // 60\n  if (hasSetPrototypeOf) {                                                                   // 53  // 61\n    Object.setPrototypeOf(instance, constr.prototype);                                       // 54  // 62\n  } else if (instance.__proto__) {                                                           // 55  // 63\n    instance.__proto__ = constr.prototype;                                                   // 56  // 64\n  }                                                                                          // 57  // 65\n};                                                                                           // 58  // 66\n                                                                                             // 59  // 67\n// This monkey-patches the Collection constructor                                            // 60  // 68\n// This code is the same monkey-patching code                                                // 61  // 69\n// that matb33:collection-hooks uses, which works pretty nicely                              // 62  // 70\nCollectionExtensions._wrapCollection = function (ns, as) {                                   // 63  // 71\n  // Save the original prototype                                                             // 64  // 72\n  if (!as._CollectionPrototype) as._CollectionPrototype = new as.Collection(null);           // 65  // 73\n                                                                                             // 66  // 74\n  var constructor = as.Collection;                                                           // 67  // 75\n  var proto = as._CollectionPrototype;                                                       // 68  // 76\n                                                                                             // 69  // 77\n  ns.Collection = function () {                                                              // 70  // 78\n    var ret = constructor.apply(this, arguments);                                            // 71  // 79\n    // This is where all the collection extensions get processed                             // 72  // 80\n    CollectionExtensions._processCollectionExtensions(this, arguments);                      // 73  // 81\n    return ret;                                                                              // 74  // 82\n  };                                                                                         // 75  // 83\n                                                                                             // 76  // 84\n  ns.Collection.prototype = proto;                                                           // 77  // 85\n  ns.Collection.prototype.constructor = ns.Collection;                                       // 78  // 86\n                                                                                             // 79  // 87\n  for (var prop in constructor) {                                                            // 80  // 88\n    if (constructor.hasOwnProperty(prop)) {                                                  // 81  // 89\n      ns.Collection[prop] = constructor[prop];                                               // 82  // 90\n    }                                                                                        // 83  // 91\n  }                                                                                          // 84  // 92\n};                                                                                           // 85  // 93\n                                                                                             // 86  // 94\nCollectionExtensions._processCollectionExtensions = function (self, args) {                  // 87  // 95\n  // Using old-school operations for better performance                                      // 88  // 96\n  // Please don't judge me ;P                                                                // 89  // 97\n  var args = args ? [].slice.call(args, 0) : undefined;                                      // 90  // 98\n  var extensions = CollectionExtensions._extensions;                                         // 91  // 99\n  for (var i = 0, len = extensions.length; i < len; i++) {                                   // 92  // 100\n    extensions[i].apply(self, args);                                                         // 93  // 101\n  }                                                                                          // 94  // 102\n};                                                                                           // 95  // 103\n                                                                                             // 96  // 104\nif (typeof Mongo !== 'undefined') {                                                          // 97  // 105\n  CollectionExtensions._wrapCollection(Meteor, Mongo);                                       // 98  // 106\n  CollectionExtensions._wrapCollection(Mongo, Mongo);                                        // 99  // 107\n} else {                                                                                     // 100\n  CollectionExtensions._wrapCollection(Meteor, Meteor);                                      // 101\n}                                                                                            // 102\n                                                                                             // 103\nif (typeof Meteor.users !== 'undefined') {                                                   // 104\n  // Ensures that Meteor.users instanceof Mongo.Collection                                   // 105\n  CollectionExtensions._reassignCollectionPrototype(Meteor.users);                           // 106\n}                                                                                            // 107\n///////////////////////////////////////////////////////////////////////////////////////////////     // 116\n                                                                                                    // 117\n}).call(this);                                                                                      // 118\n                                                                                                    // 119\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['lai:collection-extensions'] = {};\n\n})();\n","servePath":"/packages/lai_collection-extensions.js","sourceMap":{"version":3,"sources":["/packages/lai_collection-extensions/packages/lai_collection-extensions.js"],"names":[],"mappingsfile":"/packages/lai_collection-extensions.js","sourcesContent":["(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                           //\n// packages/lai:collection-extensions/collection-extensions.js                               //\n//                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                             //\n// The collection extensions namespace                                                       // 1\nCollectionExtensions = {};                                                                   // 2\n                                                                                             // 3\n// Stores all the collection extensions                                                      // 4\nCollectionExtensions._extensions = [];                                                       // 5\n                                                                                             // 6\n// This is where you would add custom functionality to                                       // 7\n// Mongo.Collection/Meteor.Collection                                                        // 8\nMeteor.addCollectionExtension = function (customFunction) {                                  // 9\n  if (typeof customFunction !== 'function') {                                                // 10\n    throw new Meteor.Error(                                                                  // 11\n      'collection-extension-wrong-argument',                                                 // 12\n      'You must pass a function \\\n       into Meteor.addCollectionExtension().');                                              // 14\n  }                                                                                          // 15\n  CollectionExtensions._extensions.push(customFunction);                                     // 16\n  // If Meteor.users exists, apply the extension right away                                  // 17\n  if (typeof Meteor.users !== 'undefined') {                                                 // 18\n    customFunction.apply(Meteor.users, ['users']);                                           // 19\n  }                                                                                          // 20\n};                                                                                           // 21\n                                                                                             // 22\n// Utility function to add a prototype function to your                                      // 23\n// Meteor/Mongo.Collection object                                                            // 24\nMeteor.addCollectionPrototype = function (name, customFunction) {                            // 25\n  if (typeof name !== 'string') {                                                            // 26\n    throw new Meteor.Error(                                                                  // 27\n      'collection-extension-wrong-argument',                                                 // 28\n      'You must pass a string as the first argument \\\n       into Meteor.addCollectionPrototype().');                                              // 30\n  }                                                                                          // 31\n  if (typeof customFunction !== 'function') {                                                // 32\n    throw new Meteor.Error(                                                                  // 33\n      'collection-extension-wrong-argument',                                                 // 34\n      'You must pass a function as the second argument \\\n       into Meteor.addCollectionPrototype().');                                              // 36\n  }                                                                                          // 37\n  (typeof Mongo !== 'undefined' ?                                                            // 38\n    Mongo.Collection :                                                                       // 39\n    Meteor.Collection).prototype[name] = customFunction;                                     // 40\n};                                                                                           // 41\n                                                                                             // 42\n// This is used to reassign the prototype of unfortunately                                   // 43\n// and unstoppably already instantiated Mongo instances                                      // 44\n// i.e. Meteor.users                                                                         // 45\nCollectionExtensions._reassignCollectionPrototype = function (instance, constr) {            // 46\n  var hasSetPrototypeOf = typeof Object.setPrototypeOf === 'function';                       // 47\n                                                                                             // 48\n  if (!constr) constr = typeof Mongo !== 'undefined' ? Mongo.Collection : Meteor.Collection; // 49\n                                                                                             // 50\n  // __proto__ is not available in < IE11                                                    // 51\n  // Note: Assigning a prototype dynamically has performance implications                    // 52\n  if (hasSetPrototypeOf) {                                                                   // 53\n    Object.setPrototypeOf(instance, constr.prototype);                                       // 54\n  } else if (instance.__proto__) {                                                           // 55\n    instance.__proto__ = constr.prototype;                                                   // 56\n  }                                                                                          // 57\n};                                                                                           // 58\n                                                                                             // 59\n// This monkey-patches the Collection constructor                                            // 60\n// This code is the same monkey-patching code                                                // 61\n// that matb33:collection-hooks uses, which works pretty nicely                              // 62\nCollectionExtensions._wrapCollection = function (ns, as) {                                   // 63\n  // Save the original prototype                                                             // 64\n  if (!as._CollectionPrototype) as._CollectionPrototype = new as.Collection(null);           // 65\n                                                                                             // 66\n  var constructor = as.Collection;                                                           // 67\n  var proto = as._CollectionPrototype;                                                       // 68\n                                                                                             // 69\n  ns.Collection = function () {                                                              // 70\n    var ret = constructor.apply(this, arguments);                                            // 71\n    // This is where all the collection extensions get processed                             // 72\n    CollectionExtensions._processCollectionExtensions(this, arguments);                      // 73\n    return ret;                                                                              // 74\n  };                                                                                         // 75\n                                                                                             // 76\n  ns.Collection.prototype = proto;                                                           // 77\n  ns.Collection.prototype.constructor = ns.Collection;                                       // 78\n                                                                                             // 79\n  for (var prop in constructor) {                                                            // 80\n    if (constructor.hasOwnProperty(prop)) {                                                  // 81\n      ns.Collection[prop] = constructor[prop];                                               // 82\n    }                                                                                        // 83\n  }                                                                                          // 84\n};                                                                                           // 85\n                                                                                             // 86\nCollectionExtensions._processCollectionExtensions = function (self, args) {                  // 87\n  // Using old-school operations for better performance                                      // 88\n  // Please don't judge me ;P                                                                // 89\n  var args = args ? [].slice.call(args, 0) : undefined;                                      // 90\n  var extensions = CollectionExtensions._extensions;                                         // 91\n  for (var i = 0, len = extensions.length; i < len; i++) {                                   // 92\n    extensions[i].apply(self, args);                                                         // 93\n  }                                                                                          // 94\n};                                                                                           // 95\n                                                                                             // 96\nif (typeof Mongo !== 'undefined') {                                                          // 97\n  CollectionExtensions._wrapCollection(Meteor, Mongo);                                       // 98\n  CollectionExtensions._wrapCollection(Mongo, Mongo);                                        // 99\n} else {                                                                                     // 100\n  CollectionExtensions._wrapCollection(Meteor, Meteor);                                      // 101\n}                                                                                            // 102\n                                                                                             // 103\nif (typeof Meteor.users !== 'undefined') {                                                   // 104\n  // Ensures that Meteor.users instanceof Mongo.Collection                                   // 105\n  CollectionExtensions._reassignCollectionPrototype(Meteor.users);                           // 106\n}                                                                                            // 107\n///////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}}]